{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elmoi\\\\OneDrive\\\\Escritorio\\\\unapec\\\\2do cuat\\\\verificacion y validacion de software\\\\reactPruebas\\\\weather-app\\\\src\\\\WeatherDisplay.js\";\nimport React from 'react';\nimport DayForecast from './DayForecast';\n\nfunction WeatherDisplay(props) {\n  const weather = props.weather;\n  const iconURL = `owf owf-${weather.weather[0].id} owf-5x`; //obtains day of week\n\n  const dayOfWeek = date => {\n    /*\r\n    the Date constructor uses the UNIX Timestamp with milliseconds, but OpenWeatherAPI call uses it without.\r\n    So we multiply the given timestamp date by 1000 to add the milliseconds.\r\n    */\n    const d = new Date(date * 1000).toString().split(\" \");\n    console.log(d);\n    return `${d[0]}, ${d[1]} ${d[2]}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, \"First column\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, \"Second column\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, \"Third column\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, \"Fourth column\"));\n}\n\nexport default WeatherDisplay;","map":{"version":3,"sources":["C:/Users/elmoi/OneDrive/Escritorio/unapec/2do cuat/verificacion y validacion de software/reactPruebas/weather-app/src/WeatherDisplay.js"],"names":["React","DayForecast","WeatherDisplay","props","weather","iconURL","id","dayOfWeek","date","d","Date","toString","split","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,OAAO,GAAI,WAAUD,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBE,EAAG,SAAjD,CAF6B,CAG7B;;AACA,QAAMC,SAAS,GAAIC,IAAD,IAAS;AACzB;;;;AAIA,UAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAI,GAAG,IAAhB,EAAsBG,QAAtB,GAAiCC,KAAjC,CAAuC,GAAvC,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACA,WAAQ,GAAEA,CAAC,CAAC,CAAD,CAAI,KAAIA,CAAC,CAAC,CAAD,CAAI,IAAGA,CAAC,CAAC,CAAD,CAAI,EAAhC;AACD,GARD;;AASA,sBACF;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAOE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,CADE;AAgBD;;AAED,eAAeP,cAAf","sourcesContent":["import React from 'react';\r\nimport DayForecast from './DayForecast'\r\n\r\nfunction WeatherDisplay(props) {\r\n  const weather = props.weather\r\n  const iconURL = `owf owf-${weather.weather[0].id} owf-5x`\r\n  //obtains day of week\r\n  const dayOfWeek = (date) =>{\r\n    /*\r\n    the Date constructor uses the UNIX Timestamp with milliseconds, but OpenWeatherAPI call uses it without.\r\n    So we multiply the given timestamp date by 1000 to add the milliseconds.\r\n    */\r\n    const d = new Date(date * 1000).toString().split(\" \")\r\n    console.log(d)\r\n    return `${d[0]}, ${d[1]} ${d[2]}`\r\n  }\r\n  return (\r\n<div className=\"columns\">\r\n  <div className=\"column\">\r\n    First column\r\n  </div>\r\n  <div className=\"column\">\r\n    Second column\r\n  </div>\r\n  <div className=\"column\">\r\n    Third column\r\n  </div>\r\n  <div className=\"column\">\r\n    Fourth column\r\n  </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default WeatherDisplay;"]},"metadata":{},"sourceType":"module"}