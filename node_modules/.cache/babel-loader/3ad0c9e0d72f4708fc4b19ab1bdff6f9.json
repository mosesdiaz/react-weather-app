{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elmoi\\\\OneDrive\\\\Escritorio\\\\unapec\\\\2do cuat\\\\verificacion y validacion de software\\\\reactPruebas\\\\weather-app\\\\src\\\\WeatherDisplay.js\";\nimport React from 'react';\nimport DayForecast from './DayForecast';\n\nfunction WeatherDisplay(props) {\n  const weather = props.weather; //const icon = `owf owf-${weather.weather[0].id} owf-5x`\n  //obtains day of week\n\n  const dayOfWeek = date => {\n    /*\r\n    the Date constructor uses the UNIX Timestamp with milliseconds, but OpenWeatherAPI call uses it without.\r\n    So we multiply the given timestamp date by 1000 to add the milliseconds.\r\n    */\n    const d = new Date(date * 1000).toString().split(\" \");\n    console.log(d);\n    return `${d[0]}, ${d[1]} ${d[2]}`;\n  };\n\n  const weekForecast = props.weather.map((w, index) => /*#__PURE__*/React.createElement(DayForecast, {\n    key: index,\n    forecast: w,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 56\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), console.log(props.location.name)\n  /* <h1 className='title' >Weather forecast for {props.location.name}, {props.country}</h1> */\n  , /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns is-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, weekForecast));\n}\n\nexport default WeatherDisplay;","map":{"version":3,"sources":["C:/Users/elmoi/OneDrive/Escritorio/unapec/2do cuat/verificacion y validacion de software/reactPruebas/weather-app/src/WeatherDisplay.js"],"names":["React","DayForecast","WeatherDisplay","props","weather","dayOfWeek","date","d","Date","toString","split","console","log","weekForecast","map","w","index","location","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB,CAD6B,CAE7B;AACA;;AACA,QAAMC,SAAS,GAAIC,IAAD,IAAS;AACzB;;;;AAIA,UAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAI,GAAG,IAAhB,EAAsBG,QAAtB,GAAiCC,KAAjC,CAAuC,GAAvC,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACA,WAAQ,GAAEA,CAAC,CAAC,CAAD,CAAI,KAAIA,CAAC,CAAC,CAAD,CAAI,IAAGA,CAAC,CAAC,CAAD,CAAI,EAAhC;AACD,GARD;;AASA,QAAMM,YAAY,GAAGV,KAAK,CAACC,OAAN,CAAcU,GAAd,CAAmB,CAACC,CAAD,EAAGC,KAAH,kBAAa,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,KAAlB;AAAyB,IAAA,QAAQ,EAAED,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CAArB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACc,QAAN,CAAeC,IAA3B;AAAgC;AAFnC,iBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,YADH,CAJF,CADF;AAUD;;AAED,eAAeX,cAAf","sourcesContent":["import React from 'react';\r\nimport DayForecast from './DayForecast'\r\n\r\nfunction WeatherDisplay(props) {\r\n  const weather = props.weather\r\n  //const icon = `owf owf-${weather.weather[0].id} owf-5x`\r\n  //obtains day of week\r\n  const dayOfWeek = (date) =>{\r\n    /*\r\n    the Date constructor uses the UNIX Timestamp with milliseconds, but OpenWeatherAPI call uses it without.\r\n    So we multiply the given timestamp date by 1000 to add the milliseconds.\r\n    */\r\n    const d = new Date(date * 1000).toString().split(\" \")\r\n    console.log(d)\r\n    return `${d[0]}, ${d[1]} ${d[2]}`\r\n  }\r\n  const weekForecast = props.weather.map( (w,index) => <DayForecast key={index} forecast={w}/> )\r\n  return (\r\n    <div>\r\n      <br/>\r\n      {console.log(props.location.name)/* <h1 className='title' >Weather forecast for {props.location.name}, {props.country}</h1> */}\r\n      <hr/>\r\n      <div className=\"columns is-6\">\r\n        {weekForecast}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherDisplay;"]},"metadata":{},"sourceType":"module"}