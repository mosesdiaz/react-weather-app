{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elmoi\\\\OneDrive\\\\Escritorio\\\\unapec\\\\2do cuat\\\\verificacion y validacion de software\\\\reactPruebas\\\\weather-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [weather, setWeather] = useState();\n  useEffect(() => {\n    fetch('http://api.openweathermap.org/data/2.5/weather?id=3492908&appid=f8cccb4dbfc14738615a10fa33bfdf42').then(res => res.json()).then(res => setWeather(res));\n  }, []);\n\n  const weatherData = () => {\n    if (weather) {\n      return Object.keys(weather).map(key => {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 20\n          }\n        }, key, \" => \", weather[key]);\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }\n      }, \"data is not available\");\n    } // weather[\"weather\"].map( (prop)=>{\n    //     return <h1>{prop}</h1>\n    //   })\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, weatherData);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/elmoi/OneDrive/Escritorio/unapec/2do cuat/verificacion y validacion de software/reactPruebas/weather-app/src/App.js"],"names":["React","useState","useEffect","App","weather","setWeather","fetch","then","res","json","weatherData","Object","keys","map","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,kGAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EACyBF,IADzB,CAC8BC,GAAG,IAAIH,UAAU,CAACG,GAAD,CAD/C;AAED,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAIN,OAAJ,EAAa;AACT,aAAOO,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,GAArB,CAA2BC,GAAD,IAAS;AACtC,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,GAAJ,UAAaV,OAAO,CAACU,GAAD,CAApB,CAAP;AACH,OAFM,CAAP;AAGH,KAJD,MAIO;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACH,KAPuB,CAU1B;AACA;AACA;;AACC,GAbD;;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WADH,CADF;AAKD;;AAED,eAAeP,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [weather, setWeather] = useState();\n\n  useEffect(() => {\n    fetch('http://api.openweathermap.org/data/2.5/weather?id=3492908&appid=f8cccb4dbfc14738615a10fa33bfdf42')\n    .then(res => res.json()).then(res => setWeather(res));\n  }, [])\n\n  const weatherData = () => {\n    if (weather) {\n        return Object.keys(weather).map( (key) => {\n            return <p>{key} => {weather[key]}</p>;\n        });\n    } else {\n        return <p>data is not available</p>;\n    }\n\n\n  // weather[\"weather\"].map( (prop)=>{\n  //     return <h1>{prop}</h1>\n  //   })\n  }\n\n  return (\n    <div>\n      {weatherData}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}