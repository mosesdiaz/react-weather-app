{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elmoi\\\\OneDrive\\\\Escritorio\\\\unapec\\\\2do cuat\\\\verificacion y validacion de software\\\\reactPruebas\\\\weather-app\\\\src\\\\DayForecast.js\";\nimport React from 'react';\n\nfunction DayForecast(props) {\n  const forecast = props.weather;\n  const iconURL = `owf owf-${forecast.weather[0].id} owf-5x`; //obtains day of week\n\n  const dayOfWeek = date => {\n    /*\r\n    the Date constructor uses the UNIX Timestamp with milliseconds, but OpenWeatherAPI call uses it without.\r\n    So we multiply the given timestamp date by 1000 to add the milliseconds.\r\n    */\n    const d = new Date(date * 1000).toString().split(\" \");\n    console.log(d);\n    return `${d[0]}, ${d[1]} ${d[2]}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, dayOfWeek(forecast.dt)), /*#__PURE__*/React.createElement(\"i\", {\n    className: iconURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, forecast.weather[0].description), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, Math.round(forecast.main.temp), \" \\xB0C | \", Math.round(forecast.main.temp * 9 / 5 + 32), \" \\xB0F \"));\n}\n\nexport default DayForecast;","map":{"version":3,"sources":["C:/Users/elmoi/OneDrive/Escritorio/unapec/2do cuat/verificacion y validacion de software/reactPruebas/weather-app/src/DayForecast.js"],"names":["React","DayForecast","props","forecast","weather","iconURL","id","dayOfWeek","date","d","Date","toString","split","console","log","dt","description","Math","round","main","temp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,QAAQ,GAAGD,KAAK,CAACE,OAAvB;AACA,QAAMC,OAAO,GAAI,WAAUF,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBE,EAAG,SAAlD,CAFwB,CAGxB;;AACA,QAAMC,SAAS,GAAIC,IAAD,IAAS;AACzB;;;;AAIA,UAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAI,GAAG,IAAhB,EAAsBG,QAAtB,GAAiCC,KAAjC,CAAuC,GAAvC,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACA,WAAQ,GAAEA,CAAC,CAAC,CAAD,CAAI,KAAIA,CAAC,CAAC,CAAD,CAAI,IAAGA,CAAC,CAAC,CAAD,CAAI,EAAhC;AACD,GARD;;AAUF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,SAAS,CAACJ,QAAQ,CAACY,EAAV,CAAd,CADF,eAEE;AAAG,IAAA,SAAS,EAAEV,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBY,WAAxB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACC,KAAL,CAAWf,QAAQ,CAACgB,IAAT,CAAcC,IAAzB,CAAL,eAA2CH,IAAI,CAACC,KAAL,CAAWf,QAAQ,CAACgB,IAAT,CAAcC,IAAd,GAAqB,CAArB,GAAuB,CAAvB,GAA2B,EAAtC,CAA3C,YAJF,CADF;AAQD;;AAED,eAAenB,WAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction DayForecast(props) {\r\n    const forecast = props.weather\r\n    const iconURL = `owf owf-${forecast.weather[0].id} owf-5x`\r\n    //obtains day of week\r\n    const dayOfWeek = (date) =>{\r\n      /*\r\n      the Date constructor uses the UNIX Timestamp with milliseconds, but OpenWeatherAPI call uses it without.\r\n      So we multiply the given timestamp date by 1000 to add the milliseconds.\r\n      */\r\n      const d = new Date(date * 1000).toString().split(\" \")\r\n      console.log(d)\r\n      return `${d[0]}, ${d[1]} ${d[2]}`\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{dayOfWeek(forecast.dt)}</h3>\r\n      <i className={iconURL}></i>\r\n      <p>{forecast.weather[0].description}</p>\r\n      <h3>{Math.round(forecast.main.temp)} °C | {Math.round(forecast.main.temp * 9/5 + 32)} °F </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayForecast;"]},"metadata":{},"sourceType":"module"}